openapi: 3.0.3
info:
  title: SADIE API
  description: API pour l'analyse technique des marchés financiers
  version: 0.2.1
  contact:
    name: Support technique SADIE
    url: https://github.com/yourusername/sadie/issues

servers:
  - url: http://localhost:8000
    description: Serveur de développement

tags:
  - name: alerts
    description: Gestion des alertes
  - name: market
    description: Données de marché
  - name: websocket
    description: Connexions WebSocket

paths:
  /alerts:
    get:
      summary: Liste des alertes
      description: Récupère la liste des alertes
      tags:
        - alerts
      parameters:
        - in: query
          name: symbol
          schema:
            type: string
          description: Filtre les alertes par symbole
          required: false
      responses:
        '200':
          description: Liste des alertes récupérée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsResponse'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    post:
      summary: Création d'une alerte
      description: Crée une nouvelle alerte
      tags:
        - alerts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertCreate'
      responses:
        '201':
          description: Alerte créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertResponse'
        '400':
          description: Données invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /alerts/{id}:
    delete:
      summary: Suppression d'une alerte
      description: Supprime une alerte existante
      tags:
        - alerts
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Identifiant de l'alerte
      responses:
        '200':
          description: Alerte supprimée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Alerte non trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /market/{symbol}:
    get:
      summary: Données de marché actuelles
      description: Récupère les dernières données de marché pour un symbole
      tags:
        - market
      parameters:
        - in: path
          name: symbol
          schema:
            type: string
          required: true
          description: Symbole du marché (ex. BTCUSDT)
      responses:
        '200':
          description: Données récupérées avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketDataResponse'
        '404':
          description: Symbole non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /market/{symbol}/history:
    get:
      summary: Historique des données de marché
      description: Récupère l'historique des données de marché pour un symbole
      tags:
        - market
      parameters:
        - in: path
          name: symbol
          schema:
            type: string
          required: true
          description: Symbole du marché (ex. BTCUSDT)
        - in: query
          name: interval
          schema:
            type: string
            default: "1m"
            enum: ["1m", "5m", "15m", "30m", "1h", "4h", "1d"]
          description: Intervalle des bougies
        - in: query
          name: limit
          schema:
            type: integer
            default: 1000
            minimum: 1
            maximum: 5000
          description: Nombre de points de données
      responses:
        '200':
          description: Historique récupéré avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketDataListResponse'
        '404':
          description: Symbole non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ws/{symbol}:
    get:
      summary: WebSocket données de marché
      description: Point d'entrée WebSocket pour les données de marché en temps réel
      tags:
        - websocket
      parameters:
        - in: path
          name: symbol
          schema:
            type: string
          required: true
          description: Symbole du marché (ex. BTCUSDT)
      responses:
        '101':
          description: Connexion WebSocket établie
        '400':
          description: Symbole invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Alert:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique de l'alerte
        symbol:
          type: string
          description: Symbole du marché
        type:
          type: string
          enum: [price, indicator]
          description: Type d'alerte
        condition:
          type: string
          enum: [above, below]
          description: Condition de déclenchement
        value:
          type: number
          description: Valeur de déclenchement
        notification_type:
          type: string
          enum: [browser, email]
          description: Type de notification
        created_at:
          type: integer
          description: Timestamp de création
        triggered:
          type: boolean
          description: État de déclenchement
        triggered_at:
          type: integer
          nullable: true
          description: Timestamp de déclenchement
      required:
        - id
        - symbol
        - type
        - condition
        - value
        - notification_type
        - created_at

    AlertCreate:
      type: object
      properties:
        symbol:
          type: string
          description: Symbole du marché
        type:
          type: string
          enum: [price, indicator]
          description: Type d'alerte
        condition:
          type: string
          enum: [above, below]
          description: Condition de déclenchement
        value:
          type: number
          description: Valeur de déclenchement
        notification_type:
          type: string
          enum: [browser, email]
          description: Type de notification
      required:
        - symbol
        - type
        - condition
        - value
        - notification_type

    MarketData:
      type: object
      properties:
        symbol:
          type: string
          description: Symbole du marché
        timestamp:
          type: integer
          description: Timestamp des données
        data:
          type: object
          properties:
            open:
              type: number
              description: Prix d'ouverture
            high:
              type: number
              description: Prix le plus haut
            low:
              type: number
              description: Prix le plus bas
            close:
              type: number
              description: Prix de clôture
            volume:
              type: number
              description: Volume
            indicators:
              type: object
              properties:
                rsi:
                  type: number
                  description: Relative Strength Index
                macd:
                  type: number
                  description: Moving Average Convergence Divergence
                ema_20:
                  type: number
                  description: Exponential Moving Average 20
                ema_50:
                  type: number
                  description: Exponential Moving Average 50
                ema_200:
                  type: number
                  description: Exponential Moving Average 200
      required:
        - symbol
        - timestamp
        - data

    AlertsResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Statut de la requête
        data:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          description: Liste des alertes
      required:
        - success

    AlertResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Statut de la requête
        data:
          $ref: '#/components/schemas/Alert'
          description: Alerte créée
      required:
        - success

    MarketDataResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Statut de la requête
        data:
          $ref: '#/components/schemas/MarketData'
          description: Données de marché
      required:
        - success

    MarketDataListResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Statut de la requête
        data:
          type: array
          items:
            $ref: '#/components/schemas/MarketData'
          description: Liste des données de marché
      required:
        - success

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Statut de la requête
      required:
        - success

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Statut de la requête
        error:
          type: string
          description: Message d'erreur
      required:
        - success
        - error 